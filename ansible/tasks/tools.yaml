- name: Install other tools (tmux, fzf, rg, etc.)
  become: true
  ansible.builtin.apt:
    name:
      - tmux
      - tmuxp
      - fzf
      - ripgrep
      - fd-find
      - zoxide
      - xclip
      - git-absorb
    state: latest

- name: Add fd alias
  ansible.builtin.file:
    path: "{{lookup('env', 'HOME')}}/.local/bin/fd"
    src: "/usr/bin/fdfind"
    state: link

# bottom
- name: Check for bottom
  ansible.builtin.shell: command -v btm
  register: bottom_exists
  ignore_errors: true

- name: Download bottom deb
  when: bottom_exists is failed
  ansible.builtin.get_url:
    url: https://github.com/ClementTsang/bottom/releases/download/{{bottom_version | default('0.9.1')}}/bottom_{{bottom_version | default('0.9.1')}}_amd64.deb
    dest: /tmp/bottom.deb

- name: Install bottom deb
  become: true
  when: bottom_exists is failed
  ansible.builtin.shell: dpkg -i /tmp/bottom.deb

# install yazi
- name: Check for yazi
  ansible.builtin.shell: command -v yazi
  register: yazi_exists
  ignore_errors: true

- name: Install yazi (latest)
  when: yazi_exists is failed
  ansible.builtin.shell: "$HOME/.cargo/bin/cargo install --locked --git https://github.com/sxyazi/yazi.git"

# chezmoi
- name: Check for chezmoi
  ansible.builtin.shell: command -v chezmoi
  register: chezmoi_exists
  ignore_errors: true

- name: Download chezmoi install script
  when: chezmoi_exists is failed
  ansible.builtin.get_url:
    url: https://get.chezmoi.io/
    dest: /tmp/chezmoi.sh

- name: Install chezmoi
  when: chezmoi_exists is failed
  ansible.builtin.shell: sh /tmp/chezmoi.sh

# lazydocker
- name: Check for lazydocker
  ansible.builtin.shell: command -v lazydocker
  register: lazydocker_exists
  ignore_errors: true

- name: Download lazydocker install script
  when: lazydocker_exists is failed
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh
    dest: /tmp/lazydocker.sh

- name: Install lazydocker
  when: lazydocker_exists is failed
  ansible.builtin.shell: sh /tmp/lazydocker.sh

# mega desktop
- name: Check for mega desktop
  ansible.builtin.shell: command -v megasync
  register: mega_exists
  ignore_errors: true

- name: Download mega deb
  when: mega_exists is failed
  ansible.builtin.get_url:
    url: https://mega.nz/linux/repo/xUbuntu_22.04/amd64/megasync-xUbuntu_22.04_amd64.deb
    dest: /tmp/mega.deb

- name: Install mega deb
  become: true
  when: mega_exists is failed
  ansible.builtin.shell: dpkg -i /tmp/mega.deb

# AppImageLauncher
- name: Check for appimagelauncher cli
  ansible.builtin.shell: command -v ail-cli
  register: ail_exists
  ignore_errors: true

- name: Download appimagelauncher deb
  when: ail_exists is failed
  ansible.builtin.get_url:
    url: https://github.com/TheAssassin/AppImageLauncher/releases/download/v2.2.0/appimagelauncher_2.2.0-travis995.0f91801.bionic_amd64.deb
    dest: /tmp/ail.deb

- name: Install appimagelauncher deb
  become: true
  when: ail_exists is failed
  ansible.builtin.shell: dpkg -i /tmp/ail.deb

# obsidian
- name: Check for Obsidian AppImage
  stat:
    path: "{{appimages_path | default('~/Applications/')}}/obsidian.AppImage"
  register: obsidian_appimage
  ignore_errors: true

- name: Verify existence of AppImages dir
  ansible.builtin.file:
    path: "{{appimages_path | default('~/Applications/')}}"
    state: directory

- name: Download Obsidian AppImage
  when: not obsidian_appimage.stat.exists
  ansible.builtin.get_url:
    url: https://github.com/obsidianmd/obsidian-releases/releases/download/v{{obsidian_version | default('1.4.16')}}/Obsidian-{{obsidian_version | default('1.4.16')}}.AppImage
    dest: "{{appimages_path | default('~/Applications/')}}/obsidian.AppImage"